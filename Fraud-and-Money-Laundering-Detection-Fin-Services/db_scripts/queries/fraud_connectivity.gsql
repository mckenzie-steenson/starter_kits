CREATE QUERY fraud_connectivity(VERTEX<User> input_user, FLOAT trust_score=0.5) FOR GRAPH AntiFraud SYNTAX V1 {
/* 
    This query gets the number of neighbors to the input user with a low trust score. 
    
    Sample input:
    input_user: 33, or any integer between 1 and 500
    trust_score: minimum valid credit score, any float number (e.g. 0.1)

    Starting from "input_user", 
    (1) Find its neighborhood of Device_Tokens, Transactions, Payment_Instruments, and Users connected within 3 hops.
    (2) Count the number of neighbors whose trust score is below "trust_score".
     
*/

    OrAccum<BOOL> @visited;
    SumAccum<INT> @@sum_result;
    SetAccum<EDGE> @@edges_to_display;

    INT SAMPLE_SIZE = 15;
    INT MAX_OUTDEGREE = 20;
    INT MAX_HOPS = 3;

    start (_) = {input_user};  
    WHILE start.size() > 0 LIMIT MAX_HOPS DO
        start = SELECT t
            FROM start:s - (:e) - :t
            SAMPLE SAMPLE_SIZE EDGE WHEN s.outdegree() >= MAX_OUTDEGREE
            WHERE t.@visited == FALSE 
                AND t != input_user 
            ACCUM @@edges_to_display += e
            POST-ACCUM
                // Count the entities below trust_score
                CASE WHEN 
                    t.trust_score < trust_score
                THEN
                    @@sum_result += 1
                END,
                t.@visited += TRUE;
    END;

    PRINT @@sum_result;
}
